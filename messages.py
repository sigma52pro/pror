from telebot import formatting
stat_text = "<i>–ü—Ä–∏–≤–µ—Ç!</i> –Ø —Ä–∞–±–æ—Ç–∞—é."


help_message = """–ü—Ä–∏–≤–µ—Ç –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º 
/help - –ø–æ–º–æ—â—å (—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)
/joke - —Å–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞
/jpy_to_rub 100 - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å 100 JPY –≤ RUB
/cvt 100 JPY - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å 100 JPY –≤ RUB
/cvt 100 JPY IDR - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å 100 JPY –≤ IDR
/set_my_currency RUB - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª–µ–≤—É—é –≤–∞–ª—é—Ç—É
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:—ç—Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏–µ —á—Ç–æ –∏ –≤—ã 
"""
forward_comands = "–ù–µ –ø–µ—Ä–µ—Å—ã–ª–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã.–≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ!"
cat = '–ö–∞–∫–æ–π –∫–ª–∞—Å–Ω—ã–π –∫–æ—Ç'
whatsup_message_text = '–•–æ—Ä–æ—à–æ,–∞ —É –≤–∞—Å?'
goodbye_message_text = "–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!"
secret_admin = '–í–æ—Ç –≤–∞—à–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ:–±–∞–Ω–∞–Ω'
secret_not_admin = '–í–∞–º —Å—é–¥–∞ –Ω–µ–ª—å–∑—è.–í—ã –Ω–µ –∞–¥–º–∏–Ω'
user_info_caption ="–í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ñ–∞–π–ª–µ "
cvt_help_message = "–ü–æ–∂–∞–ª—É—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏,–Ω–∞–ø—Ä–∏–º–µ—Ä"
error_no_such_currency = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∞–ª—é—Ç–∞ {currency}, —É–∫–∞–∂–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é."
set_my_currency_help_message_text = formatting.format_text(
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä:",
    formatting.hcode("/set_my_currency RUB"),

)
set_my_currency_success_message_text = formatting.format_text(
    "–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:",
    "{currency}",
)
convert_jpy_to_rubjpy_to_rub_how_to = formatting.format_text(
    cvt_help_message,
    formatting.hcode("/jpy_to_rub 100"),
)

cvt_how_to = formatting.format_text(
    cvt_help_message,
    formatting.hcode("/cvt 100 JPY"),
)


invalid_argument_text = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä–≥—É–º–Ω–µ—Ç:"

def format_currency_convert_message(
    from_currency,
    to_currency,
    from_amount,
    to_amount
):
    return formatting.format_text(
        formatting.hcode(f"{from_amount:,}"),
        f"{from_currency.upper()} —ç—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ",
        formatting.hcode(f"{to_amount:,.2f}"),
        to_currency.upper(),
        separator=" "
    )

def formating_jpy_to_rub(jpy_amount,rub_amount):
    return format_currency_convert_message(
        from_currency="JPY",
        to_currency="RUB",
        from_amount=jpy_amount,
        to_amount=rub_amount
    )
    # return formatting.format_text(
    #     formatting.hcode(f"{jpy_amount:,}"),
    #     "JPY —ç—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ",
    #     formatting.hcode(f"{rub_amount:,.2f}"),
    #     "RUB",
    #     separator=" "
    # )




markdown_text = """*bold \*text*
_italic \_text_
__underline__
~strikethrough~
||spoiler||
*bold _italic bold ~italic bold strikethrough ||italic bold strikethrough spoiler||~ __underline italic bold___ bold*
[inline URL](http://www.example.com/)
[inline mention of a user](tg://user?id=6820204471)
![üëç](tg://emoji?id=5368324170671202286)
`inline fixed-width code`
```
pre-formatted fixed-width code block
```
```python
pre-formatted fixed-width code block written in the Python programming language

@bot.message_handler(commands=["md"])
def send_markdown_message(message: types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text=messages.markdown_text,
        parse_mode='MarkdownV2'
        )
```
>Block quotation started
>Block quotation continued
>The last line of the block quotation
**>The expandable block quotation started right after the previous block quotation
>It is separated from the previous block quotation by an empty bold entity

>Expandable block quotation continued

>Hidden by default part of the expandable block quotation started

>Expandable block quotation continued

>The last line of the expandable block quotation with the expandability mark||"""

html_text = """<b>bold</b>, <strong>bold</strong>
<i>italic</i>, <em>italic</em>
<u>underline</u>, <ins>underline</ins>
<s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>
<span class="tg-spoiler">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>
<b>bold <i>italic bold <s>italic bold strikethrough <span class="tg-spoiler">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>
<a href="http://www.example.com/">inline URL</a>
<a href="tg://user?id=6820204471">inline mention of a user</a>
<tg-emoji emoji-id="5368324170671202286">üëç</tg-emoji>
<code>inline fixed-width code</code>
<pre>pre-formatted fixed-width code block</pre>
<pre><code class="language-python">
#pre-formatted fixed-width code block written in the Python programming language
@bot.message_handler(commands=["md"])
def send_markdown_message(message: types.Message):
    bot.send_message(
        chat_id=message.chat.id,
        text=messages.markdown_text,
        parse_mode='MarkdownV2'
    )
</code></pre>
<blockquote>Block 
quotation started\nBlock quotation continued\nThe last line of the block quotation</blockquote>
<blockquote>

Block quotation started
Block quotation continued
The last line of the block quotation
</blockquote>
<blockquote expandable>Expandable block quotation started\nExpandable block quotation continued\nExpandable block quotation continued\nHidden by default part of the block quotation started\nExpandable block quotation continued\nThe last line of the block quotation</blockquote>"""


def start_text():
    return None


def help_text():
    return None